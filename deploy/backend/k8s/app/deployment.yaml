#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: ''
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: nats://nats:4222
  CACHER: Memory
  MONGO_URI: mongodb://mongo

---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - port: 3000
      targetPort: 3000

---
#########################################################
# API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: api

---
#########################################################
# Sensors service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensors
spec:
  selector:
    matchLabels:
      app: sensors
  replicas: 1
  template:
    metadata:
      labels:
        app: sensors
    spec:
      containers:
        - name: sensors
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: sensors

---
#########################################################
# Users service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
spec:
  selector:
    matchLabels:
      app: users
  replicas: 1
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: users

---
#########################################################
# Alerts service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts
spec:
  selector:
    matchLabels:
      app: alerts
  replicas: 1
  template:
    metadata:
      labels:
        app: alerts
    spec:
      containers:
        - name: alerts
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: alerts
---
#########################################################
# AQI service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aqi
spec:
  selector:
    matchLabels:
      app: aqi
  replicas: 1
  template:
    metadata:
      labels:
        app: aqi
    spec:
      containers:
        - name: aqi
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: aqi
---
#########################################################
# Ingestion service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion
spec:
  selector:
    matchLabels:
      app: ingestion
  replicas: 1
  template:
    metadata:
      labels:
        app: ingestion
    spec:
      containers:
        - name: ingestion
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
          env:
            - name: SERVICES
              value: ingestion
---

---
#########################################################
# Mail service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mail
spec:
  selector:
    matchLabels:
      app: mail
  replicas: 1
  template:
    metadata:
      labels:
        app: mail
    spec:
      containers:
        - name: mail
          # Placeholder for image latest. It should really use the tagged image (date)
          image: nano2766/smart-city-unal:latest
          imagePullPolicy: 'Always'
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          envFrom:
            - configMapRef:
                name: common-env
            - secretRef:
                name: sensitive-data
          env:
            - name: SERVICES
              value: mail
---
#########################################################
# MongoDB server
#########################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          resources:
            requests:
              memory: '512Mi'
              cpu: '500m'
            limits:
              memory: '1Gi'
              cpu: '1'
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - 'mongo'
                - '--eval'
                - "db.adminCommand('ping')"
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---
#########################################################
# Persistent volume for MongoDB
#########################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  labels:
    name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
#########################################################
# MongoDB service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo

---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
    - port: 4222
      name: nats
      targetPort: 4222

---
#########################################################
# NATS transporter
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
        - name: nats
          image: nats:2.7.0-alpine
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'

          ports:
            - containerPort: 4222
              name: nats
